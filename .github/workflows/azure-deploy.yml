name: Azure FastAPI Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Create deployment package
        run: |
          echo "=== Creating deployment directory ==="
          mkdir -p deploy

          echo "=== Copying files ==="
          # Essential files
          cp -v requirements.txt deploy/
          cp -v gunicorn_config.py deploy/
          cp -rv api deploy/

          echo "=== Creating ZIP archive ==="
          cd deploy
          zip -r ../deploy.zip .
          cd ..

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Web App
        run: |
          echo "=== Configuring Python runtime ==="
          az webapp config set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --linux-fx-version "PYTHON|3.9" \
            --always-on true || true

          echo "=== Setting app settings ==="
          az webapp config appsettings set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --settings \
              WEBSITES_PORT=8000 \
              PYTHON_VERSION=3.9 \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              ENABLE_ORYX_BUILD=true \
              BUILD_FLAGS="--no-venv" \
              WEBSITE_RUN_FROM_PACKAGE=0 \
              PYTHONPATH="/home/site/wwwroot" \
              POST_BUILD_COMMAND="pip install -r requirements.txt" \
              STARTUP_COMMAND="cd /home/site/wwwroot && gunicorn --bind=0.0.0.0:8000 --timeout 600 --log-level debug --error-logfile /dev/stdout --access-logfile /dev/stdout api.main:app"

      - name: Deploy to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: powerop-app
          package: deploy.zip

      - name: Deployment verification
        if: steps.deploy.outcome == 'success'
        run: |
          echo "=== Waiting for build and startup ==="
          sleep 90

          echo "=== Getting deployment logs ==="
          az webapp log deployment show \
            --name powerop-app \
            --resource-group powerop-ml-rg || true

          echo "=== Checking web app status ==="
          STATUS=$(az webapp show \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --query state -o tsv)
          echo "Web app status: $STATUS"

          echo "=== Testing application health endpoint ==="
          WEBAPP_URL=$(az webapp show \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --query defaultHostName -o tsv)
          MAX_RETRIES=5
          RETRY_COUNT=0
          WAIT_TIME=30

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "Attempt $((RETRY_COUNT+1))/$MAX_RETRIES"
            
            echo "=== Container logs ==="
            az webapp log container \
              --name powerop-app \
              --resource-group powerop-ml-rg || true

            # Try the health check
            RESPONSE=$(curl -s -w "\n%{http_code}" "https://$WEBAPP_URL/health")
            HTTP_BODY=$(echo "$RESPONSE" | head -n 1)
            HTTP_STATUS=$(echo "$RESPONSE" | tail -n 1)
            
            echo "Response body: $HTTP_BODY"
            echo "Status code: $HTTP_STATUS"

            if [ "$HTTP_STATUS" = "200" ]; then
              echo "Health check successful!"
              exit 0
            fi

            echo "Waiting ${WAIT_TIME} seconds before next attempt..."
            sleep $WAIT_TIME
            RETRY_COUNT=$((RETRY_COUNT+1))
          done

          echo "=== Deployment failed - Final status ==="
          az webapp log container \
            --name powerop-app \
            --resource-group powerop-ml-rg || true
          exit 1
