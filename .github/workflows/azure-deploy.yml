name: Azure FastAPI Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Create deployment package
        run: |
          echo "=== Preparing deployment files ==="
          # Create build script
          echo "pip install --upgrade pip" > build.sh
          echo "pip install -r requirements.txt" >> build.sh
          chmod +x build.sh

          echo "=== Creating deployment directory ==="
          mkdir -p deploy
          cp -v requirements.txt deploy/
          cp -v gunicorn_config.py deploy/
          cp -v build.sh deploy/
          cp -rv api deploy/

          # Create run script
          echo "gunicorn --bind=0.0.0.0:8000 --timeout 600 --log-level debug api.main:app" > deploy/run.sh
          chmod +x deploy/run.sh

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Web App
        run: |
          echo "=== Configuring Python runtime ==="
          az webapp config set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --linux-fx-version "PYTHON|3.9" \
            --always-on true || true

          echo "=== Setting app settings ==="
          az webapp config appsettings set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --settings \
              WEBSITES_PORT=8000 \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              ENABLE_ORYX_BUILD=true \
              WEBSITE_RUN_FROM_PACKAGE=false \
              PYTHONPATH="/home/site/wwwroot" \
              COMMAND="./run.sh"

          echo "=== Configuring deployment source ==="
          az webapp deployment source config-local-git \
            --name powerop-app \
            --resource-group powerop-ml-rg

      - name: Get publish profile
        id: get-profile
        run: |
          profile=$(az webapp deployment list-publishing-profiles \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --xml)
          echo "::add-mask::$profile"
          echo "PROFILE=$profile" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: powerop-app
          publish-profile: ${{ steps.get-profile.outputs.PROFILE }}
          package: deploy

      - name: Deployment verification
        if: steps.deploy.outcome == 'success'
        run: |
          echo "=== Waiting for build and startup ==="
          sleep 60

          echo "=== Checking web app status ==="
          STATUS=$(az webapp show \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --query state -o tsv)
          echo "Web app status: $STATUS"

          if [ "$STATUS" != "Running" ]; then
            echo "=== Web app is not running - Checking logs ==="
            az webapp log container \
              --name powerop-app \
              --resource-group powerop-ml-rg || true
            exit 1
          fi

          echo "=== Testing application health endpoint ==="
          WEBAPP_URL=$(az webapp show \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --query defaultHostName -o tsv)

          for i in {1..5}; do
            echo "Attempt $i/5"
            echo "=== Container logs ==="
            az webapp log container \
              --name powerop-app \
              --resource-group powerop-ml-rg || true

            if curl -s "https://$WEBAPP_URL/health" | grep -q "ok"; then
              echo "Health check successful!"
              exit 0
            fi
            
            echo "Waiting 30 seconds..."
            sleep 30
          done

          echo "=== Deployment failed - Final logs ==="
          az webapp log container \
            --name powerop-app \
            --resource-group powerop-ml-rg || true
          exit 1
