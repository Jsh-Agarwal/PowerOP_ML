name: Azure FastAPI Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Create minimal package
        run: |
          # Create a very minimal initial package
          mkdir deploy
          cp startup.sh deploy/
          cp requirements.txt deploy/
          cp gunicorn_config.py deploy/
          cp runtime.txt deploy/
          cp -r api deploy/
          cd deploy
          zip -r ../deploy.zip .

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Clean up existing deployment
        run: |
          echo "Stopping and cleaning web app..."
          az webapp stop --name powerop-app --resource-group powerop-ml-rg
          az webapp config appsettings set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --settings WEBSITE_RUN_FROM_PACKAGE=

      - name: Basic configuration
        run: |
          az webapp config set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --linux-fx-version "PYTHON|3.9" \
            --startup-file "startup.sh"

      - name: Initial deployment
        uses: azure/webapps-deploy@v2
        with:
          app-name: powerop-app
          package: deploy.zip

      - name: Configure app settings
        run: |
          az webapp config appsettings set \
            --name powerop-app \
            --resource-group powerop-ml-rg \
            --settings \
              WEBSITES_PORT=8000 \
              PYTHON_VERSION=3.9 \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              WEBSITE_RUN_FROM_PACKAGE=1

      - name: Start and verify
        run: |
          echo "=== Starting Application ==="
          az webapp start --name powerop-app --resource-group powerop-ml-rg

          echo "=== Deployment Info ==="
          az webapp show --name powerop-app --resource-group powerop-ml-rg

          echo "=== Checking Configuration ==="
          az webapp config show --name powerop-app --resource-group powerop-ml-rg

          echo "=== Application Settings ==="
          az webapp config appsettings list --name powerop-app --resource-group powerop-ml-rg

          echo "=== Waiting for Startup ==="
          sleep 45

          echo "=== Container Logs ==="
          az webapp log tail --name powerop-app --resource-group powerop-ml-rg --provider docker

          echo "=== Application Logs ==="
          az webapp log download --name powerop-app --resource-group powerop-ml-rg

          echo "=== Deployment Logs ==="
          az webapp deployment log tail --name powerop-app --resource-group powerop-ml-rg

          echo "=== Health Check ==="
          WEBAPP_URL=$(az webapp show --name powerop-app --resource-group powerop-ml-rg --query defaultHostName -o tsv)
          curl -v "https://$WEBAPP_URL/health"

          echo "=== Final Status Check ==="
          STATUS=$(az webapp show --name powerop-app --resource-group powerop-ml-rg --query state -o tsv)
          echo "Status: $STATUS"

          if [ "$STATUS" != "Running" ]; then
            echo "=== Error Logs ==="
            az webapp log tail --name powerop-app --resource-group powerop-ml-rg --debug
            exit 1
